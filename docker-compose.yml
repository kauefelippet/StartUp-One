services:
  mysql:
    image: mysql:8.0
    container_name: Rodaki-DB
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - Rodaki

  backend:
    build: ./Rodaki-Back
    container_name: Rodaki-backend
    restart: always
    depends_on:
      - mysql
      - minio
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET: bucket-rodaki
      JWT_SECRET: ${JWT_SECRET} 
      JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS}
    ports:
      - "8080:8080"
    networks:
      - Rodaki

  frontend:
    build: ./Rodaki-Front
    container_name: Rodaki-frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "${FRONT_PORT}:80"
    networks:
      - Rodaki

  minio:
    image: minio/minio:latest
    container_name: Rodaki-minIO-blog
    restart: always
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - Rodaki

  Rodaki-minIO-client:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 30 &&
      mc alias set local http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY} &&
      mc mb --ignore-existing local/bucket-rodaki &&
      mc policy set public local/bucket-rodaki
      "
    networks:
        - Rodaki

volumes:
  mysql_data:
  minio_data:

networks:
  Rodaki:
